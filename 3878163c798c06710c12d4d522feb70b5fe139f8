{
  "comments": [
    {
      "key": {
        "uuid": "f00e8cb4_aaef6f14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-10-10T13:36:43Z",
      "side": 1,
      "message": "nit: asciidoctor is not the same as asciidoc :)",
      "range": {
        "startLine": 7,
        "startChar": 18,
        "endLine": 7,
        "endChar": 26
      },
      "revId": "3878163c798c06710c12d4d522feb70b5fe139f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0e5ac1c_92429c66",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-10-10T14:08:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f00e8cb4_aaef6f14",
      "range": {
        "startLine": 7,
        "startChar": 18,
        "endLine": 7,
        "endChar": 26
      },
      "revId": "3878163c798c06710c12d4d522feb70b5fe139f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f00e8cb4_cafaa3d8",
        "filename": "lib/asciidoctor/LICENSE-jruby",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-10-10T13:36:43Z",
      "side": 1,
      "message": "whitespace\n\nalso in other parts of the file.\n\nDo we have to keep it exactly as-is from wherever it\u0027s imported?",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 3
      },
      "revId": "3878163c798c06710c12d4d522feb70b5fe139f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10cb2096_b33db8e8",
        "filename": "lib/asciidoctor/LICENSE-jruby",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-10-10T14:08:27Z",
      "side": 1,
      "message": "The whitespace errors come from copying as is, but I guess it cannot harm to fix them.\n\nDone.",
      "parentUuid": "f00e8cb4_cafaa3d8",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 3
      },
      "revId": "3878163c798c06710c12d4d522feb70b5fe139f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10cb2096_9342bc66",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/xdocs/Module.java",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2014-10-10T14:11:13Z",
      "side": 1,
      "message": "Future improvement/optimization could be to make it pluggable (plugin in plugin :). And provide number of different plugin packaged versions: all-in-one and only markdown version + pluggable optional formatter-modules that can be added in addition to gerrit_site/lib directory and this would just work. We did something similar with scripting plugins and javamelody-plugin, where we provide number of artifacts from Buck driven build, e. g. when you want database introspection you need another (optional) library: [1].\n\nThis would allow to add many number of different formatter with many dpendencies. Consumer of the plugin would only use what the really need and use.\n\n [1] https://gerrit.googlesource.com/plugins/javamelody/+/master/BUCK",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 53,
        "endChar": 37
      },
      "revId": "3878163c798c06710c12d4d522feb70b5fe139f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0e5ac1c_d26f04ed",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/xdocs/Module.java",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-10-10T14:20:26Z",
      "side": 1,
      "message": "Yes, I want other plugins to be able to contribute more formatters :) \n\nActually this is what I had in mind when I designed the interface and extension point for formatters in [1].\n\nI didn\u0027t know that we can already do this and that we have already examples for this. That\u0027s really cool :) Not sure how soon I can look into it, but it\u0027s definitely a goal for the future to enable this. And then we can move out the hard-coded formatters into Buck artifacts.\n\n[1] https://gerrit-review.googlesource.com/60577",
      "parentUuid": "10cb2096_9342bc66",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 53,
        "endChar": 37
      },
      "revId": "3878163c798c06710c12d4d522feb70b5fe139f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f00e8cb4_8af4abe9",
        "filename": "src/main/resources/Documentation/about.md",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1011123
      },
      "writtenOn": "2014-10-10T13:36:43Z",
      "side": 1,
      "message": "Might be worth mentioning that it actually uses asciidoctor, which does not support all of the features of asciidoc.",
      "revId": "3878163c798c06710c12d4d522feb70b5fe139f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10cb2096_d348348c",
        "filename": "src/main/resources/Documentation/about.md",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2014-10-10T14:08:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f00e8cb4_8af4abe9",
      "revId": "3878163c798c06710c12d4d522feb70b5fe139f8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}